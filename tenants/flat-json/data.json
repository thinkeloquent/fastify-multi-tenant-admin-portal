{
  "tenantId": "flat-json",
  "tenantName": "FlatJSON Metadata Management",
  "description": "Hierarchical JSON data management through flattened key-value storage with version control and audit logging",
  "version": "1.0.0",
  "features": [
    "Object Management",
    "Semantic Version Control",
    "UUID v7 Revision Tracking",
    "Metadata Management",
    "JSON Flattening/Unflattening",
    "Hierarchical Locking",
    "Audit Logging",
    "Restore Functionality",
    "Soft Delete Support",
    "Lock State Inheritance",
    "Server-Managed Versioning",
    "Auto-Increment Versions",
    "Auto-Increment Revisions"
  ],
  "entityHierarchy": {
    "object": {
      "description": "Top-level containers for JSON configurations",
      "color": "#2563eb",
      "level": 1,
      "children": ["version"]
    },
    "version": {
      "description": "Semantic versioned snapshots of objects",
      "color": "#7c3aed",
      "level": 2,
      "children": ["revision"],
      "validation": "semantic_versioning"
    },
    "revision": {
      "description": "UUID v7 labeled incremental changes within versions",
      "color": "#059669",
      "level": 3,
      "children": ["metadata"],
      "autoGenerated": true,
      "labelFormat": "UUID_v7"
    },
    "metadata": {
      "description": "Flattened key-value pairs",
      "color": "#dc2626",
      "level": 4,
      "children": []
    }
  },
  "supportedMetadataTypes": [
    "string",
    "number",
    "boolean",
    "object",
    "array",
    "null",
    "custom"
  ],
  "statusOptions": ["active", "draft", "deprecated"],
  "auditActions": ["create", "update", "delete", "restore", "lock", "unlock"],
  "lockingRules": {
    "inheritance": "Locks cascade down the hierarchy",
    "object": "Locks all child versions, revisions, and metadata",
    "version": "Locks all child revisions and metadata",
    "revision": "Locks all child metadata",
    "metadata": "Individual metadata entries can be locked"
  },
  "versioningRules": {
    "semanticVersioning": {
      "enabled": true,
      "format": "MAJOR.MINOR.PATCH",
      "validation": "^\\d+\\.\\d+\\.\\d+(-[a-zA-Z0-9.-]+)?(\\+[a-zA-Z0-9.-]+)?$",
      "incrementTypes": ["major", "minor", "patch"],
      "autoGeneration": true,
      "serverManaged": true
    },
    "revisionNumbering": {
      "format": "UUID_v7",
      "autoGeneration": true,
      "serverManaged": true,
      "sequential": false,
      "description": "UUID v7 provides time-ordered unique identifiers"
    },
    "defaultVersions": {
      "initial": "1.0.0",
      "fallback": {
        "major": "1.0.0",
        "minor": "0.1.0",
        "patch": "0.0.1"
      }
    }
  },
  "ui": {
    "theme": {
      "primary": "#2563eb",
      "secondary": "#7c3aed",
      "success": "#059669",
      "warning": "#d97706",
      "error": "#dc2626",
      "info": "#0891b2"
    },
    "navigation": {
      "dashboard": "Dashboard",
      "objects": "Objects",
      "versions": "Versions",
      "revisions": "Revisions",
      "metadata": "Metadata",
      "changelog": "Audit Log"
    },
    "breadcrumbs": {
      "separator": "â€º",
      "showIcons": true
    },
    "versionDisplay": {
      "showSemanticBadge": true,
      "highlightValidVersions": true,
      "showIncrementOptions": true
    },
    "revisionDisplay": {
      "showUuidFormat": true,
      "truncateLength": 8,
      "showFullOnHover": true
    }
  },
  "api": {
    "baseUrl": "/flat-json",
    "endpoints": {
      "objects": "/objects",
      "versions": "/versions",
      "revisions": "/revisions",
      "metadata": "/",
      "changelog": "/changelog",
      "versioning": {
        "nextVersion": "/objects/:id/next-version",
        "nextRevision": "/versions/:id/next-revision",
        "incrementVersion": "/objects/:id/increment-version",
        "incrementRevision": "/versions/:id/increment-revision"
      },
      "unflatten": {
        "object": "/object/:id/unflatten",
        "version": "/version/:id/unflatten",
        "revision": "/revision/:id/unflatten"
      }
    },
    "responseFormat": {
      "success": "{ data: T }",
      "error": "{ errors: string[] }"
    }
  },
  "database": {
    "tables": [
      "flat_json_object",
      "flat_json_version",
      "flat_json_revision",
      "flat_json_metadata",
      "flat_json_changelog"
    ],
    "relationships": {
      "object_to_version": "one-to-many",
      "version_to_revision": "one-to-many",
      "revision_to_metadata": "one-to-many",
      "changelog": "references all entities"
    },
    "constraints": {
      "unique_object_name": "Object names must be unique",
      "unique_key_path_per_revision": "Key paths must be unique within a revision",
      "foreign_keys": "All relationships enforced with foreign keys",
      "semantic_version_validation": "Version labels must follow semantic versioning",
      "uuid_v7_revision_labels": "Revision labels are UUID v7 format"
    }
  },
  "businessRules": {
    "softDelete": "Entities are marked as inactive rather than deleted",
    "versioning": "Semantic versioning enforced for version labels",
    "revisionLabeling": "UUID v7 labels provide time-ordered unique identifiers",
    "serverManagedVersioning": "Version and revision numbers are generated by the server",
    "locking": "Hierarchical locking prevents modifications to locked entities",
    "audit": "All changes are logged with user attribution and timestamps",
    "restore": "Soft-deleted entities can be restored if no conflicts exist",
    "validation": "Version labels must pass semantic versioning validation"
  },
  "examples": {
    "semanticVersions": [
      "1.0.0",
      "2.1.3",
      "1.0.0-alpha",
      "1.0.0-beta.1",
      "1.0.0+build.1"
    ],
    "revisionLabels": [
      "01234567-89ab-7def-0123-456789abcdef",
      "01890a2b-3c4d-7e5f-6789-0123456789ab",
      "018a1b2c-3d4e-75f6-789a-bcdef0123456"
    ],
    "flattenedData": {
      "user.name": "John Doe",
      "user.settings.theme": "dark",
      "user.settings.notifications.email": true,
      "user.settings.notifications.sms": false,
      "products.0.id": 1,
      "products.0.name": "Widget",
      "products.1.id": 2,
      "products.1.name": "Gadget"
    },
    "unflattenedData": {
      "user": {
        "name": "John Doe",
        "settings": {
          "theme": "dark",
          "notifications": {
            "email": true,
            "sms": false
          }
        }
      },
      "products": [
        { "id": 1, "name": "Widget" },
        { "id": 2, "name": "Gadget" }
      ]
    }
  },
  "performance": {
    "indexing": [
      "Primary keys on all entities",
      "Foreign key indexes",
      "Unique constraint on object names",
      "Unique constraint on revision_id + key_path",
      "Index on version labels for semantic version queries",
      "UUID v7 provides natural time-based ordering"
    ],
    "caching": "Client-side caching of API responses",
    "pagination": "Changelog supports limit/offset pagination"
  },
  "validation": {
    "semanticVersion": {
      "pattern": "^\\d+\\.\\d+\\.\\d+(-[a-zA-Z0-9.-]+)?(\\+[a-zA-Z0-9.-]+)?$",
      "examples": ["1.0.0", "2.1.3", "1.0.0-alpha", "1.0.0+build.1"],
      "errorMessage": "Version must follow semantic versioning format (e.g., 1.0.0)"
    },
    "revisionLabel": {
      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-7[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
      "examples": [
        "01234567-89ab-7def-0123-456789abcdef",
        "018a1b2c-3d4e-75f6-789a-bcdef0123456"
      ],
      "errorMessage": "Revision label must be a valid UUID v7 format"
    }
  },
  "security": {
    "tenantIsolation": "All requests are scoped to flat-json tenant",
    "auditLogging": "All operations are logged with user context",
    "hierarchicalLocking": "Prevents unauthorized modifications",
    "inputValidation": "All inputs are validated against schemas"
  }
}
